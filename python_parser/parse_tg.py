from telethon import TelegramClient
from telethon.errors import SessionPasswordNeededError
import asyncio
import os
import pymorphy2

# Вставьте сюда свои значения
api_id = '26908424'
api_hash = '9d40c54db3163c9141ef097b97415d37'
phone_number = '+79296727018'

# Список каналов
channels = [
    '@kazancity',
    'vkazani',
    'region116_dtp_official',
    'kznonline',
    'kzn_official',
    'tatarstan_da',
    'Eduvtatarstan',
    'kznpapa',
    'prtatar',
    'gazetabo',
    'kazanfirst',
    'inkazanischa',
    'Tatarstan24TV',
    'szsocpit',
    'tatmediaofficial'
]

# Ключевые слова для фильтрации
tags = [
    "школьное питание",
    "питание в школах",
    "питание школьное",
    "питание школьников",
    "департамент продовольствия",
    "департамент питания",
    "организация питания",
    "организация школьного питания",
    "школьное питание",
    "питание в школах",
    "питание школьное",
    "питание школьников",
    "департамент продовольствия",
    "департамент питания",
    "организация питания",
    "организация школьного питания",
    "жалоба на питание",
    "обращение на питание",
    "качество питания",
    "качественное питание",
    "некачественное питание",
    "жалоба на качество питания",
    "питание детей",
    "питание школьников",
    "питание в казани",
    "казанское питание",
    "школы казани",
    "школьники казани",
    "poelidovolen",

    "Куда пожаловаться на некачественное питание в школе Казань?",
    "Куда пожаловаться на некачественное питание в гимназии Казань?",
    "Куда пожаловаться на некачественное питание в гимназии Казань?",
    "Куда пожаловаться на некачественное питание в ДОУ Казань?",
    "Куда пожаловаться на некачественное питание в садике Казань?",
    "Куда пожаловаться на некачественное питание в больнице Казань?",

    "Жалоба на питание в школе Казань",
    "Жалоба на питание в гимназии Казань",
    "Жалоба на питание в гимназии Казань",
    "Жалоба на питание в ДОУ Казань",
    "Жалоба на питание в садике Казань",
    "Жалоба на питание в больнице Казань",

    "Некачественное питание в школе Казань",
    "Некачественное питание в гимназии Казань",
    "Некачественное питание в гимназии Казань",
    "Некачественное питание в ДОУ Казань",
    "Некачественное питание в садике Казань",
    "Некачественное питание в больнице Казань",

    "Плохое питание в школе Казань",
    "Плохое питание в гимназии Казань",
    "Плохое питание в гимназии Казань",
    "Плохое питание в ДОУ Казань",
    "Плохое питание в садике Казань",
    "Плохое питание в больнице Казань",

    "Ужасное питание в школе Казань",
    "Ужасное питание в гимназии Казань",
    "Ужасное питание в гимназии Казань",
    "Ужасное питание в ДОУ Казань",
    "Ужасное питание в садике Казань",
    "Ужасное питание в больнице Казань",

    "Плохо кормят в школе Казань",
    "Плохо кормят в гимназии Казань",
    "Плохо кормят в гимназии Казань",
    "Плохо кормят в ДОУ Казань",
    "Плохо кормят в садике Казань",
    "Плохо кормят в больнице Казань",

    "Кому пожаловаться на питание в школе Казань?",
    "Кому пожаловаться на питание в гимназии Казань?",
    "Кому пожаловаться на питание в гимназии Казань?",
    "Кому пожаловаться на питание в ДОУ Казань?",
    "Кому пожаловаться на питание в садике Казань?",
    "Кому пожаловаться на питание в больнице Казань?",

    "Куда обратиться по вопросам питания в школе Казань?",
    "Куда обратиться по вопросам питания в гимназии Казань?",
    "Куда обратиться по вопросам питания в гимназии Казань?",
    "Куда обратиться по вопросам питания в ДОУ Казань?",
    "Куда обратиться по вопросам питания в садике Казань?",
    "Куда обратиться по вопросам питания в больнице Казань?",

    "Кто кормит в школе Казань",
    "Кто кормит в гимназии Казань",
    "Кто кормит в гимназии Казань",
    "Кто кормит в ДОУ Казань",
    "Кто кормит в садике Казань",
    "Кто кормит в больнице Казань",
    "Оставить жалобу на питание в школе Казань",
    "Оставить жалобу на питаниев гимназии Казань",
    "Оставить жалобу на питание в гимназии Казань",
    "Оставить жалобу на питание в ДОУ Казань",
    "Оставить жалобу на питание в садике Казань",
    "Оставить жалобу на питание в больнице Казань",

    "Невкусно кормят в школе Казань",
    "Невкусно кормят в гимназии Казань",
    "Невкусно кормят в гимназии Казань",
    "Невкусно кормят в ДОУ Казань",
    "Невкусно кормят в садике Казань",
    "Невкусно кормят в больнице Казань",

    "Невкусно кормят в школе Казань",
    "Невкусно кормят в гимназии Казань",
    "Невкусно кормят в гимназии Казань",
    "Невкусно кормят в ДОУ Казань",
    "Невкусно кормят в садике Казань",
    "Невкусно кормят в больнице Казань",

    "Школа Казань питание жалоба",
    "гимназия Казань питание жалоба",
    "лицей Казань питание жалоба",
    "ДОУ Казань питание жалоба",
    "садик Казань питание жалоба",
    "больница Казань питание жалоба",

    "Где пожаловаться на питание в Казани школа",
    "Где пожаловаться на питание в Казани гимназия",
    "Где пожаловаться на питание в Казани лицей",
    "Где пожаловаться на питание в Казани ДОУ",
    "Где пожаловаться на питание в Казани сад ",
    "Где пожаловаться на питание в Казани больница",

    "Оставить жалобу на питание",
    "Оставить жалобу на питание в Казани",
]

morph = pymorphy2.MorphAnalyzer()

def normalize_text(text):
    """Нормализует текст, возвращая его в базовую форму."""
    words = text.split()
    normalized_words = [morph.parse(word)[0].normal_form for word in words]
    return normalized_words

async def main():
    client = TelegramClient('session_name', api_id, api_hash)

    await client.start()

    if not await client.is_user_authorized():
        await client.send_code_request(phone_number)
        try:
            await client.sign_in(phone_number, input('Enter the code: '))
        except SessionPasswordNeededError:
            await client.sign_in(password=input('Enter your password: '))

    messages_data = []

    for channel in channels:
        try:
            async for message in client.iter_messages(channel, limit=100):
                if message.text:
                    normalized_message = normalize_text(message.text)
                    if any(tag in normalized_message for tag in tags):
                        messages_data.append((channel, message.text))
        except Exception as e:
            print(f"Could not retrieve messages from {channel}: {e}")

    # Сохраняем данные в HTML файл
    with open('parse_tg.html', 'w', encoding='utf-8') as f:
        f.write('<html><body>')
        f.write('<h1>Парсинг Telegram Каналов</h1>')
        for channel, message in messages_data:
            f.write(f'<h2>Канал: {channel}</h2>')
            f.write(f'<p>{message}</p>')
        f.write('</body></html>')

# Запуск асинхронной функции
asyncio.run(main())